labal$Motor_Emissions[labal$year==2005 & labal$fips == "06037"] <- sums[3,1]
labal$Motor_Emissions[labal$year==2008 & labal$fips == "06037"] <- sums[4,1]
laball
laball
labal
c <- ggplot(labal,aes(year,Motor_Emissions))
names(labal$fips) <- c("L.A.", "Baltimore City")
c + geom_point() + geom(line) + facet_grid(.~fips)
c + geom_point() + geom_line() + facet_grid(.~fips)
levels(labal$fips) <- c("L.A.", "Baltimore City")
c + geom_point() + geom_line() + facet_grid(.~fips)
fn <- list('06037' = "L.A.", '24510' = "Baltimore City")
lblr <- function(var, val){}
lblr <- function(var, val){}
lblr <- function(var, val){
return(fn[value])}
c + geom_point() + geom_line() + facet_grid(.~fips, labeller=lblr)
lblr <- function(var, val){}
lblr <- function(var, val){
return(fn[val])}
c + geom_point() + geom_line() + facet_grid(.~fips, labeller=lblr)
install.packages("lubridate")
library(lubridate)
ymd(15112)
ymd("15112")
ymd("150112")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", file = "survey.csv")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "survey.csv")
q1 <- read.csv("survey.csv")
?strsplit
split <- strsplit(names(q1), "wgtp")
length(split)
split[123]
q2 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
head(q2)
q2$X.3 <- gsub(",", "", q2$X.3)
head(q2)
length(q2$X.3)
xq2 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", na.string = "")
head(xq2)
xq2$X.3 <- gsub(",", "", xq2$X.3)
?meadn
?mean
mean(xq2$X.3, na.rm = T)
val <- xq2$X.3[5:330]
mean(val, na.rm = T)
val
val <- gsub("..","NA", val )
val
val <- xq2$X.3[5:330]
val <- gsub("\..","NA", val )
val <- gsub("\\..","NA", val )
val
val <- xq2$X.3[5:330]
val <- gsub("\\..",NA, val )
val
mean(val, na.rm = T)
val2 <- na.omit(val)
val2
val2 <- as.numeric(val2)
mean(val2)
val2 <- val[1:190]
val2
mean(as.numeric(val2))
head(xq2)
q3 <- xq2[,X.2]
q3 <- xq2[,xq2$X.2]
library(dplyr)
q3 <- filter(xq2, X.2)
q3 <- select(xq2, X.2)
head(q3)
q3 <- q3[5:length(q3)]
q3 <- q3$X.2[5:length(q3)]
head(q3)
q3 <- xq2[,xq2$X.2]
q3 <- select(xq2, X.2)
q3$X.2 <- q3X.2[5:length(q3)]
q3$X.2 <- q3$X.2[5:length(q3)]
head(q3)
grep("^United",q3$X.2)
grep("^United",q3$X.2, value = T)
grep("^United",unique(q3$X.2), value = T)
grep("United$",unique(q3$X.2), value = T)
grep("*United",unique(q3$X.2), value = T)
class(q3.$X.2)
class(q3$X.2)
q3$X.2 <- as.character(q3$$X.2)
q3$X.2 <- as.character(q3$X.2)
class(q3$X.2)
grep("^United",unique(q3$X.2), value = T)
length(q3)
q3 <- select(xq2, X.2)
q3$X.2 <- as.character(q3$X.2)
k$name <- q3$X.2
data.frame(k)
k <- data.frame(name = q3$X.2)
head(k)
class(k$name)
k$name <- as.character(k$name)
unique(k)
k <- unique(k)
p <- na.omit(k)
p
grep("^United", p, value = T)
p
r <- grep("United", p$name, value = T)
r
grep("^United", p$name, value = T)
ed <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
names(ed)
names(gdp)
head(ed)
install.packages("quantmod")
library(quantmod)
amzn <- getSymbols("AMZN", auto.assign = F)
stimes <- index(amzn)
head(stimes)
dates <- ymd(stimes)
head(dates)
length(grep("2012-", stimes))
length(year(dates) == 2012)
?year
head(year(dates) == 2012)
sum(year(dates) == 2012)
sum(wday(dates, label = T) == "Mon" )
sum(wday(dates, label = T) == "Mon" & year(dates) == 2012)
head(ed)
names(ed)
head(gdp)
head(gdp, 10)
head(ed)
mdat <- merge(ed, gdp, by.x = "CountryCode", by.y = "X", all = F)
names(mdat)
head(mdat$Special.Notes)
head(mdat$Special.Notes, 20)
length(ed$CountryCode)
length(unique(ed$CountryCode))
sum(is.na(ed$CountryCode))
View(`q3`)
head(gdp)
gdp <- gdp[5:330,]
head(gdp)
sum(is.na(gdp[[2]]))
gdp[[2]]
gdp <- gsub("" ,NA,gdp )
head(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", na.string = " ")
head(gdp)
tail(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
gsub(" ", NA, gdp)
tail(gdp)
for(i in 1:length(names(gdp)) {gsub(" ", NA, gdp[[i]])}
for(i in 1:length(names(gdp))) {gsub(" ", NA, gdp[[i]])}
head(gdp)
for(i in 1:length(names(gdp))) {gsub("", NA, gdp[[i]])}
head(gdp)
gsub(" ", NA, gdp$X)
gdp <- gsub("", NA, gdp$X)
head(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
gdp$X <- gsub("", NA, gdp$X)
head(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
gdp$X <- gsub(" ", NA, gdp$X)
head(gdp)
View(`q1`)
View(`q2`)
View(k)
View(gdp)
head(gdp$X)
gdp$X <- gsub("", NA, gdp$X)
View(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", na.string = "" )
View(gdp)
gdp <- gdp[5:330,]
View(gdp)
gep <- gdp[5:194,]
gdp <- gdp[5:194,]
View(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", na.string = "" )
gdp <- gdp[5:330,]
View(gdp)
gdp <- gdp[1:190,]
View(gdp)
View(ed)
md <- merge(ed, gdp, by.x = "CountryCode", by.y = "X", all = T)
View(md)
View(gdp)
grep("Fiscal year end: June", md$Special.Notes)
length(grep("Fiscal year end: June", md$Special.Notes))
names(md)
names(md)[32] <- rank
names(md)[32] <- "rank"
names(md)
library(dplyr)
sorted <- arrange(md,rank)
View(sorted)
?arrange
md2 <- merge(ed, gdp, by.x = "CountryCode", by.y = "X")
View(md)
View(md2)
sorted <- arrange(md2,Gross.domestic.product.2012)
View(sorted)
names(md2)[32] <- rank
names(md2)[32] <- "rank"
View(md2)
class(md2$rank
)
md2$rank <- as.numeric(md2$rank)
class(md2$rank)
sorted <- arrange(md2,rank)
View(sorted)
sorted <- arrange(md2,desc(rank))
View(sorted)
md$rank <- as.numeric(md$rank)
sorted <- arrange(md,desc(rank))
View(sorted)
l <- na.omit(md$rank)
rm(l)
tapply(md$rank, md$Income.Group, mean(na.rm = T) )
?tapply
tapply(md, md$Income.Group, mean(na.rm = T) )
tapply(md$rank, md$Income.Group, mean,na.rm = T )
tapply(md2$rank, md2$Income.Group, mean,na.rm = T )
quantile(md,prob = c(0.2, 0.4, 0.6, 0.8, 1.0))
quantile(md$rank,prob = c(0.2, 0.4, 0.6, 0.8, 1.0))
quantile(md2$rank,prob = c(0.2, 0.4, 0.6, 0.8, 1.0))
table(quantile(md2$rank,prob = c(0.2, 0.4, 0.6, 0.8, 1.0)), md2$Income.Group)
k <- quantile(md2$rank,prob = c(0.2, 0.4, 0.6, 0.8, 1.0))
table(quantile(k, md2$Income.Group)
)
table(k, md2$Income.Group)
class(md2$Income.Group)
class(rank)
md2$rank <- as.numeric(md2$rank)
class(rank)
class(md2$rank)
table(k, md2$Income.Group)
class(k)
k <- as.factor(k)
class(k)
table(k, md2$Income.Group)
gdp <- read.csv(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv, na.string = "")
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", na.string = "")
View(gdp)
gdp <- gdp[5:330,]
View(gdp)
gdp <- gdp[,-gdp[[1]]]
gdp <- select(gdp, -row.names)
?select
gdp <- select(gdp, -gdp$row.names)
gdp <- select(gdp, matches(row.names))
gdp <- gdp[,-gdp$row.names]
gdp <- select(gdp, 2:20)
gdp <- select(gdp, 2:10)
View(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", na.string = "")
gdp <- select(gdp, 2:10)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", na.string = "")
gdp <- gdp[5:330,]
View(gdp)
names(gdp)
head(gdp)
ed <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
View(ed)
View(gdp)
gdp <- gdp[1:190,]
View(gdp)
md <- merge(gdp, ed, by.x = "X", by.y = "CountryCode")
View(md)
sortedmd <- arrange(md, md[[2]])
View(sortedmd)
md[[2]] <- as.numeric(md[[2]])
sortedmd <- arrange(md, md[[2]])
View(sortedmd)
?sort
sortedmd <- sort(md[[2]], na.last = T)
sortedmd <- md[sort(md[[2]], na.last = T),]
View(sortedmd)
rm(sortedmd)
order(md[[2]])
head(md[[2]])
names(md)[2]
names(md)[2] <- rank
names(md)[2] <- "rank"
View(md)
md <- merge(gdp, ed, by.x = "X", by.y = "CountryCode")
View(md)
names(md)
sortedmd <- arrange(md, md$Gross.domestic.product.2012)
class(md$Gross.domestic.product.2012)
md$Gross.domestic.product.2012 <- as.numeric(md$Gross.domestic.product.2012)
class(md$Gross.domestic.product.2012)
sortedmd <- arrange(md, md$Gross.domestic.product.2012)
?arrange
sortedmd <- arrange(md, desc(Gross.domestic.product.2012))
View(sortedmd)
head(md)
sort(md[[2]], descending = T)
sort(md[[2]], decreasing = T)
sort(gdp[[2]], decreasing = T, na.rm = T)
gdp[[2]] <- as.numeric(gdp[[2]])
sort(md[[2]], decreasing = T)
sort(gdp[[2]], decreasing = T, na.rm = T)
sort(gdp[[2]], decreasing = T)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", na.string = "")
unique(gdp[[2]])
gdp <- gdp[5:330,]
View(gdp)
gdp <- gdp[!is.na(gdp$Gross.domestic.product.2012),]
View(gdp)
tail(gdp)
head(gdp)
gdp["KNA",gdp$X]
gdp[gdp$X == "KNA",gdp$Gross.domestic.product.2012]
gdp[179,gdp$Gross.domestic.product.2012]
gdp[179,2]
gdp[178,2]
gdp[179,2] <- 179
gdp[[2]] <- as.character(gdp[[2]])
View(gdp)
gdp[179,2] <- "179"
View(gdp)
gdp[[2]] <- as.numeric(gdp[[2]])
View(gdp)
gdp <- gdp[1:190]
gdp <- gdp[1:190,]
View(gdp)
md <- merge(gdp, ed, by.x = "X", by.y = "CountryCode")
View(md)
class(md[[2]])
mdsort <- arrange(md, Gross.domestic.product.2012)
View(mdsort)
mdsort <- arrange(md, desc(Gross.domestic.product.2012))
View(mdsort)
class(md$Income.group)
class(md$Income.Group)
tapply(md$Gross.domestic.product.2012, md$Income.Group, mean)
table(quantile(md$rank,prob = (0.2,0.4,0.6,0.8,1)),md$Income.Group)
table(quantile(md$rank,prob = (0.2,0.4,0.6,0.8,1)),md$Income.Group))
k <- quantile(md$Gross.domestic.product.2012, prob = (0.2,0.4,0.6,0.8,1))
quantile(md$Gross.domestic.product.2012,prob = c(0.2, 0.4, 0.6, 0.8, 1.0))
k <- quantile(md$Gross.domestic.product.2012,prob = c(0.2, 0.4, 0.6, 0.8, 1.0))
table(k,md$Income.Group))
table(k,md$Income.Group)
?group
new <- split(md, list(k,md$Income.Group)))
new <- split(md, list(k,md$Income.Group))
new <- split(md, k)
table(md$Income.Group)
f <- md
f[[2]] <- as.factor(f[[2]])
View(f)
table(f[[2]])
?mutate
mutate(l, quartile = quantile(l[[2]], prob = (0.2, 0.4, 0.6, 0.8, 1.0)))
mutate(f, quartile = quantile(f[[2]], prob = (0.2, 0.4, 0.6, 0.8, 1.0)))
mutate(f, quartile = quantile(Gross.domestic.product.2012, prob = (0.2, 0.4, 0.6, 0.8, 1.0)))
f$quartile <- with(f, cut(Gross.domestic.product.2012, breaks = quantile(Gross.domestic.product.2012, probs = seq(0,1,by=0.2))))
f[[2]] <- as.numeric(f[[2]])
f$quartile <- with(f, cut(Gross.domestic.product.2012, breaks = quantile(Gross.domestic.product.2012, probs = seq(0,1,by=0.2))))
View(f)
table(f$quartile, f$Income.Group)
library(swirl)
swirl()
bye
bye()
swirl()
library(dplyr)
cran <- tbl.df(mydf)
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarise(by_package, mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
head(top_counts , 20)
arrange(top_counts, count)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, count>475)
top_unique <- filter(pack_sum, unique >465)
top_unique <
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
bye()
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <-gather(students2,sex_class,count,-grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
submit()
?mutate
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
rbind_list(passed, failed,)
rbind_list(passed, failed)
sat
?separate
submit()
submit()
submit()
Sys.getlocate("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
day(this_day)
wday(this_day,label=T)
wday(this_day)
wday(this_day,label=T)
wday(this_day,label=TRUE)
this_moment <- now()
this_momen
this_moment
hour(this_moment)
ymd("1989-05-17")
ymd("1989-05-17") -> my_date
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
dmy("192012")
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 11, minutes = 14, seconds = 55)
this_moment
nyc <- now("America/New_York")
nyc
nyc + days(2)
nyc + days(2) -> depart
depart
depart<- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive,"Asia/Hong_Kong")
arrive
mdy("June 17, 2008")
last_time <- mdy("June 17, 2008",tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
bye()
install.packages(c("dplyr", "manipulate", "Rcpp", "RMySQL"))
library(dplyr)
library(lubridate)
setwd("C:/Users/Akshat/Desktop/Course/Reproducible Research/peer_proj1/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
activity$date <- ymd(activity$date)
tot_steps <- activity[!is.na(activity$steps),]
tot_steps <- aggregate(tot_steps$steps ~ tot_steps$date,FUN = sum)
hist(tot_steps[[2]], main = "Histogram of Total Steps taken each day", xlab = "Number of Steps")
tot_steps
mean(tot_steps)
mean(tot_steps[[2]])
names(tot_steps) <- c("date", "steps")
tot_steps
